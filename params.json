{
  "name": "MAGenTA",
  "tagline": "a bioinformatics pipeline for Tn-Seq analysis of microbial pathogens",
  "body": "# Welcome to the MAGenTA project website\r\nTo address the need for (1) an analysis method based on exact fitness contribution of a genomic region and (2) a holistic pipeline that incorporates this novel method with the essentiality test, we developed MAGenTA (Microbial Assessment by Genome-wide Tn-seq Analysis), a bioinformatics pipeline for Tn-seq data analysis. In addition to developing novel methods that employ the fitness assessment, we automated comparative analyses that were previously performed manually and added the essentiality test resulting in a streamlined, uniform pipeline. \r\n\r\nIn detail, MAGenTA enables analyses to: \r\n\r\n(a) calculate fitness across a sliding window, enabling identification of protein domains and non-coding regions\r\n(b) assess gene essentiality in an organism based on transposon insertion representation\r\n(c) perform bacterial strain comparison to assess how the same gene can have different effects in a strain-dependent manner\r\n(d) perform comparative analyses for gene and regional differences across experiments\r\n(e) visualize multi-feature tracks for a given genomic region\r\n\r\n\r\n# Descriptions of MAGenTA Tools\r\n\r\n<b> SlidingWindow.pl</b>\r\n\r\n  <u>Description</u>: scans the genome with a fixed size sliding window, calculating a) organismal fitness and b) essentiality based on insertion representation calculations for the genomic region included in the window<br />\r\n  <u>Usage</u>: Input .csv file(s) (outputted from calc_fitness.pl) with reference genome. Outputs following files into a single directory: \r\n  \r\n  - <b>unmatched.txt</b> Genome indexes of insertion sites from Tn-Seq data that could not be matched with a TA site in the given genome at that exact index\r\n  - <b>allTAsites.txt</b> All TA sites that occur in the genome and whether an insertion occurred there\r\n  - <b>nullDist.txt</b> Statistics (size, mean, variance, etc) on null distribution libraries used in the essentials analysis\r\n  - <b>essentialWindows.csv</b> All information about each window (including fitness and p-value for essentiality)\r\n  - <b>essentialWindows.wig</b> Only p-values for each window in wig file for Integrated Genome Viewer (IGV)\r\n  - <b>fitWindows.csv</b> Only fitness-related information for each window\r\n  - <b>fitWindows.wig</b> Only fitness for each window in wig file for Integrated Genome Viewer (IGV)\r\n  - <b>groupedWindows.txt</b> Grouped consecutive windows with same fitness value \r\n  - <b>log.txt</b> If the --log option was selected, all standard output goes here\r\n  \r\n<b>merge.pl</b>\r\n\r\n  Description: Merges and sorts multiple comma-separated (.csv) files<br />\r\n  Usage: Input .csv files, outputs merge sorted file\r\n  \r\n<b>countTA.pl</b>\r\n\r\n  Description: Counts number of TA sites in the genome<br />\r\n  Usage: input genome, outputs number of TA sites\r\n\r\n<b>customWindow.pl</b>\r\n\r\n  Description: Given a tab delimited text file of genome region name, start position, and end position, customWindow.pl \r\n\toutputs Tn-Seq stats for those regions: # of mutants, # of unique insertions, # of TA sites, ratio of insertions\r\n\tto TA sites, aggregate fitness value, p-value for essentiality <br />\r\n  Usage: input GBK file, fasta file for genome sequence, results files, custom region file\t\r\n\r\n<b>getCoordsGBK.py</b>\r\n\r\n  Description: Get gene names and coordinates from a GBK file.<br /> \r\n\tOutput file can be inputted into Gviz as an annotation track for visualization.<br />\r\n  Usage: python getCoordsGBK.py <input GBK file> <name of output file>\r\n\r\n<b>singleFit.pl</b>\r\n  \r\n  Description: Gets a single fitness value for each insertion based on multiple mutants (lanes)<br />\r\n  Usage: perl ../singleFit.pl <all results.csv files>\r\n\r\n\r\n\r\n  ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}